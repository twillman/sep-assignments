1. What is Spatial Locality and why does it benefit performance?

Spatial locality refers to the fact that because arrays must be physically stored in consecutive memory locations, this is an advantage when searching for an item in an array.  This is because when retrieving information, a processor retrieves an entire range of memory locations.  Since array data is likely to be contained within range of other pieces, it becomes cheaper to search the chunk of information in the cache, rather than failing to find one piece and then having to retrieve from RAM again because of randomly located pieces of data, as is the case when it comes to linked lists.


2. Compare the performance of an Array to a Linked List using the Benchmark module.
-Compare the time it takes to create a 10,000 item Array to appending 10,000 items to a Linked List.
  It appears that the real time it takes to build a append 10000 items to a linked list is 0.003s, whereas creating a 10000 item array takes about 0.0003s, so in this case it appears an array takes less time.
-Compare the time it takes to access the 5000th element of the Array and the 5000th Node in the Linked List.
  It appears that the real time it takes to access the 500th node of a linked list is about 33ms whereas the time to access the 500th element in an array takes 2ms, so it appears an array is faster in this case as well.
-Compare the time it takes to remove the 5000th element from the Array to removing the 5000th Node in the Linked List.
  In the Array, the 5001st item becomes the 5000th, and so on.
  In this situation using Benchmark it appears that the real time it takes to delete the 500th node of a linked list is 26ms, whereas it takes 8ms to delete the 500th element of an array and shift everything up using the delete_at function. 
